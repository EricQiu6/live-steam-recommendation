spring:
  # ensure that objects returned do not include null
  jackson:
    default-property-inclusion: non_null
  # openfeign configurations
  cloud:
    openfeign:
      oauth2:
        enabled: true
        clientRegistrationId: twitch
      client:
        config:
          twitch-api:
            url: https://api.twitch.tv/helix
            loggerLevel: basic
            default-request-headers:
              Client-Id: "aspgmiydr5du7jqfxmfo4xqy9oxx3f"
  # set up authentication with openfeign -> twitch
  security:
    oauth2:
      client:
        registration:
          twitch:
            authorization-grant-type: client_credentials
            client-authentication-method: client_secret_post
            client-id: "aspgmiydr5du7jqfxmfo4xqy9oxx3f"
            client-secret: "m7c1893rksq2d2vntzji8ccs3hohp2"
        provider:
          twitch:
            token-uri: https://id.twitch.tv/oauth2/token
  # connect to mysql database
  datasource:
    # NOTE: environment variables are used to protect sensitive information
    url: jdbc:mysql://${DATABASE_URL:localhost}:${DATABASE_PORT:3306}/twitch?createDatabaseIfNotExist=true
    username: ${DATABASE_USERNAME:root}
    # NOTE: password have to stay consistent with docker-compose.yml
    password: ${DATABASE_PASSWORD:secret}
    driver-class-name: com.mysql.cj.jdbc.Driver
  # set sql initialization configurations
  sql:
    init:
      mode: always
      schema-locations: "classpath:database-init.sql"

# log HTTP console with TRACE and DEBUG level/priority
logging:
  level:
    org.apache.coyote.http11.Http11InputBuffer: TRACE # Incoming http requests
    com.ericqiu.twitch.external.TwitchApiClient: DEBUG
    org.springframework.jdbc.datasource.init: DEBUG
